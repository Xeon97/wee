
# -*- coding: utf-8 -*-
# meta developer: @YourUsername
# meta banner: https://example.com/banner.jpg

from telethon import events
from .. import loader, utils

class WordChainGameMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –∏–≥—Ä—ã '–°–ª–æ–≤–µ—Å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞'"""
    strings = {"name": "WordChainGame"}

    def __init__(self):
        self.active_games = {}
        self.words_used = set()

    async def client_ready(self, client, db):
        self.client = client

    async def startchaincmd(self, message):
        """–ù–∞—á–∞—Ç—å –∏–≥—Ä—É '–°–ª–æ–≤–µ—Å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞'"""
        chat_id = utils.get_chat_id(message)
        if chat_id in self.active_games:
            await message.edit("–ò–≥—Ä–∞ —É–∂–µ –∏–¥–µ—Ç!")
            return

        self.active_games[chat_id] = {
            "last_word": None,
            "players": {}
        }
        self.words_used.clear()
        await message.edit(
            "üéÆ –ò–≥—Ä–∞ '–°–ª–æ–≤–µ—Å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞' –Ω–∞—á–∞–ª–∞—Å—å!\n\n–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫, –Ω–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–µ —Å–ª–æ–≤–æ!"
        )

    @loader.unrestricted
    async def watcher(self, message):
        chat_id = utils.get_chat_id(message)
        if chat_id not in self.active_games:
            return

        game = self.active_games[chat_id]
        text = message.text.strip().lower()

        if game["last_word"]:
            last_letter = game["last_word"][-1]
            if text[0] != last_letter:
                await message.respond(f"‚ùå –°–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –Ω–∞ –±—É–∫–≤—É '{last_letter.upper()}'!")
                return

        if text in self.words_used:
            await message.respond("‚ùå –≠—Ç–æ —Å–ª–æ–≤–æ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–æ—Å—å!")
            return

        self.words_used.add(text)
        game["last_word"] = text
        user_id = message.sender_id
        game["players"][user_id] = game["players"].get(user_id, 0) + 1

        await message.respond(
            f"‚úÖ {text.capitalize()} –ø—Ä–∏–Ω—è—Ç–æ! –í–∞—à —Ö–æ–¥ –∑–∞–ø–∏—Å–∞–Ω.\n\n–°–ª–µ–¥—É—é—â–∏–π –∏–≥—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–¥—É–º–∞—Ç—å —Å–ª–æ–≤–æ –Ω–∞ –±—É–∫–≤—É '{text[-1].upper()}'."
        )

    async def stopchaincmd(self, message):
        """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–≥—Ä—É '–°–ª–æ–≤–µ—Å–Ω–∞—è —Ü–µ–ø–æ—á–∫–∞'"""
        chat_id = utils.get_chat_id(message)
        if chat_id not in self.active_games:
            await message.edit("–ò–≥—Ä–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞!")
            return

        game = self.active_games.pop(chat_id)
        results = "\n".join(
            [
                f"{(await self.client.get_entity(uid)).first_name}: {score} —Å–ª–æ–≤"
                for uid, score in game["players"].items()
            ]
        )
        await message.edit(f"–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ò—Ç–æ–≥–∏:\n\n{results}")
